# Generated by Django 5.2.2 on 2025-06-08 02:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sexo', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1, null=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('peso', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(999.99)])),
                ('estatura', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(3.0)])),
                ('nivel_actividad', models.CharField(choices=[('sedentario', 'Sedentario'), ('ligero', 'Ligero'), ('moderado', 'Moderado'), ('intenso', 'Intenso')], default='sedentario', max_length=20)),
                ('estado', models.CharField(blank=True, max_length=50)),
                ('activo', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SurveyInicial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tiene_diabetes', models.BooleanField(default=False)),
                ('tipo_diabetes', models.CharField(blank=True, choices=[('tipo1', 'Tipo 1'), ('tipo2', 'Tipo 2'), ('gestacional', 'Gestacional')], max_length=15, null=True)),
                ('fecha_diagnostico', models.DateField(blank=True, null=True)),
                ('medicamentos_actuales', models.TextField(blank=True)),
                ('parentesco_diabetes', models.CharField(blank=True, max_length=100)),
                ('frecuencia_ejercicio', models.CharField(choices=[('nunca', 'Nunca'), ('semanal', 'Semanal'), ('diario', 'Diario'), ('multiple_diario', 'Múltiple por día')], default='nunca', max_length=20)),
                ('habito_fumar', models.BooleanField(default=False)),
                ('consumo_alcohol', models.CharField(choices=[('nunca', 'Nunca'), ('ocasional', 'Ocasional'), ('frecuente', 'Frecuente')], default='nunca', max_length=20)),
                ('objetivo_principal', models.CharField(choices=[('control_glucosa', 'Control de Glucosa'), ('peso', 'Control de Peso'), ('ejercicio', 'Incrementar Ejercicio'), ('general', 'Salud General')], default='general', max_length=20)),
                ('meta_glucosa_promedio', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(70), django.core.validators.MaxValueValidator(300)])),
                ('fecha_completado', models.DateTimeField(auto_now_add=True)),
                ('completado', models.BooleanField(default=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='survey_inicial', to='accounts.user')),
            ],
            options={
                'verbose_name': 'Survey Inicial',
                'verbose_name_plural': 'Surveys Iniciales',
                'db_table': 'survey_inicial',
            },
        ),
    ]
